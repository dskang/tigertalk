* Descriptions
  TigerTalk is a project to connect the Princeton community through an
  online real-time chat system so that the community as a whole can
  benefit from stimulating interesting discussions between members of
  the community who would otherwise never get a chance to meet each
  other.
* Core
** DONE Add nicks
   - Eventually we want to use Net IDs instead of user chosen nicks
** DONE List people who are online
   - Right column should have list of people who are online
** DONE Manage same user signing in multiple times
   - When a user signs in multiple times, they don't show up in the
     user list multiple times; instead, they are brought to the
     conversation
** DONE Remove user count and replace with array of unique users
   - Also, don't send the user count on every join/part; let the user
     manage all of that client side after seeding the user list/count

** DONE Add contact info for feedback
** DONE Sort the online list
** DONE Users names aren't bolded in online list
** DONE Users remain signed in after quitting
   - Look at Ryan Dahl's chat server
     - Use a get request with the user's id
     - Our problem is that we don't have a mapping from a random ID to
       a the nick/netid. We have just the netid for the socket so
       anyone can just sign off another user if they so wish. We don't
       want that!
** TODO Deployment
   - [ ] Facebook page
   - [ ] Facebook ads
   - [X] Google Analytics
   - [X] Team email
** DONE Better security
   - Don't let client decide nickname; they will just hold the ticket
     which will serve as a unique ID
** DONE Cache ticket to reduce load times
   - Instead of destroying the ticket when the socket disconnects, let
     them use the same ticket with their netid
   - Problem: person is disconnected twice (loses two sessions instead
     of one) due to socket.disconnect and also the /part b/c socket.io
     doesn't work as expected on tigertalk.me so multiple sessions is
     a shitshow
   - Solution: Give each session a unique ID through a cookie
** DONE Transform links into clickable links
** DONE Make list of names in user list into links to FB profiles
** TODO Text formatting for users
   - <b>, <i>, /me
** TODO Open Graph integration
** DONE Hide joins/parts
** DONE Color names in list
** DONE FB profile pictures in list
** TODO Generate color only once (randomly) and store it in user data
* Bugs
** DONE Get rid of ticket information in URL after authenticating
   - Solution: assign user a cookie containing ticket and redirect to
     home
** TODO Width 100% overflows with padding
** DONE Only scroll to bottom when user is already fully scrolled
** DONE Whitespace in beginning of message is ignored in table (feature?)
   - lololol this is a feature now
** DONE Unread count doesn't show up
** DONE Users get disconnected randomly
** DONE Remove '#_=_' random crap in URL after authenticating with FB
** DONE XSS!
   - Eddy:
     the security bug is in linkification
     I sent this: http ://./"style="display:block;position:fixed;left:0;top:100px;font-size:0;width:100%;height:50px;cursor:default"onmouseover="sp=String.fromCharCode(32);zz=this.innerHTML;sendMessage=function(x){socket.emit(\ 'client_send',x+sp+'penis'+sp+zz);}
     but without the space after http
     it makes an large invisible element that, when moused over, changes the sendMessage() function to append "penis" and to append the XSS code
     (so it's self-replicating)
** TODO Unread count doesn't show up when page reconnects
** TODO Username detecting regex sucks
** DONE User leaves room twice! I show up twice!
** TODO Make sure ticket, socket_id, and room are valid and won't crash process
** TODO Update expired ticket if access_token is no longer valid
   - Although we force a user to get a new ticket if their current one
     is expired, a ticket may expire while their session is still active
   - Previous solution was just to force a reconnect (i.e. delete their
     ticket instead of marking it as expired) but this is less than ideal
   - This problem is only important if we want to use their ticket
     (i.e. access_token) for real work on the client side
* Engagement
** DONE Add backlog
   - Useful for engaging users the moment they enter the chatroom
** DONE Add unread messages to document title
   - Listen for browser events (blur, focus) so we know when the focus
     is on window
   - Every time a message comes in, increment unread_msgs count unless
     focus is on window
** DONE Bold nick when you sent message
   - Check nick property when receiving message
** DONE Highlight messages that you're mentioned in
   - Regexp on message field when receiving message
* Feature Requests
** TODO Smaller, user-created rooms
   - One of these will be an "anon" room for anonymous interactions
   - Each room will be its own URL (tigertalk.me/rooms/anon)
** TODO Show list of rooms
** TODO Private messaging
** TODO Autocomplete nicks in entry
** TODO Ping users by flashing description when they're mentioned
** TODO "Ding" sound for mentions
** TODO Shift+enter for new lines
